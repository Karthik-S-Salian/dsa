//GENERATED By CHATGPT

fn letterCombinations(digit: &str, no_chars: &[&str]) -> Vec<String> {
    if digit.is_empty() {
        return Vec::new();
    }

    let mut combos = vec!["".to_string()];

    for d in digit.chars() {
        let digit_index = d.to_digit(10).unwrap_or(2) - 2;
        
        let new_combos: Vec<String> = combos.iter().flat_map(|prefix| {
            let chars = no_chars[digit_index as usize];
            chars.chars().map(move |c| format!("{}{}", prefix, c))
        }).collect();
        
        combos = new_combos;
    }

    combos
}

fn main() {
    let no_chars = &["abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"];
    let combos = d2c("23", no_chars);
    
    for combo in combos {
        println!("{}", combo);
    }
}

